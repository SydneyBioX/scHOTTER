% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weight_matrix_1d.R
\name{generate_weight_matrix_euclidean_1d}
\alias{generate_weight_matrix_euclidean_1d}
\title{Build a point-by-kernel weight matrix for 1D (trajectory) data}
\usage{
generate_weight_matrix_euclidean_1d(
  coords,
  grid_centres,
  span = NULL,
  type = c("block", "gaussian")
)
}
\arguments{
\item{coords}{Numeric matrix/data frame of coordinates. Exactly one column must
vary (effective 1D). Other columns may be constant and are ignored for distances.}

\item{grid_centres}{Numeric matrix/data frame of kernel-centre coordinates
(e.g., from \code{\link{generate_kernel_centres_by_density_1d}}).}

\item{span}{Optional numeric in \eqn{(0, 1]}. Target proportion of points to associate
with each kernel (\code{k = ceiling(span * n_points)}). If \code{NULL}, defaults to
\eqn{13 / n_{\mathrm{points}}} (capped at 0.5).}

\item{type}{Character; either \code{"block"} or \code{"gaussian"}.}
}
\value{
A \code{Matrix::dgCMatrix} with rows = points and columns = kernels
(\code{"k_1", ..., "k_m"}).
}
\description{
Computes a sparse \eqn{n_{\mathrm{points}} \times n_{\mathrm{kernels}}} weight matrix
using Euclidean distance along the single varying coordinate (pseudotime).
Two schemes are supported:
\itemize{
\item \strong{block}: weights are 1 for neighbors within the search radius, 0 otherwise.
\item \strong{gaussian}: weights are \eqn{\exp\{-d^2 / (2\sigma^2)\}}, with
\eqn{\sigma = \mathrm{gap}/2}, where \code{gap} is the kernel spacing (or a
fallback radius computed from density) and \eqn{d} is the distance from the
kernel centre to the point of interest.
}
}
\examples{
set.seed(1)
t  <- sort(runif(80, 0, 10))
y0 <- rep(0, 80)
coords <- cbind(t = t, y = y0)
centres <- generate_kernel_centres_by_density_1d(coords, span = 0.2)
Wb <- generate_weight_matrix_euclidean_1d(coords, centres, span = 0.2, type = "block")
Wg <- generate_weight_matrix_euclidean_1d(coords, centres, span = 0.2, type = "gaussian")
dim(Wb); Matrix::nnzero(Wb)

}
\seealso{
\code{\link{generate_kernel_centres_by_density_1d}},
\code{\link{generate_weight_matrix_euclidean}}
}
