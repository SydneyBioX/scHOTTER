% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_correlation.R
\name{get_local_correlation_vector_pair}
\alias{get_local_correlation_vector_pair}
\title{Local (kernel-wise) weighted correlation for a gene pair}
\usage{
get_local_correlation_vector_pair(
  expr,
  weight_matrix,
  gene_pair,
  fisher_transform = TRUE,
  drop_zero_weight = TRUE
)
}
\arguments{
\item{expr}{Numeric matrix (rows = points/cells, cols = genes) with column
names containing the requested genes.}

\item{weight_matrix}{A point×kernel weight matrix (preferably
\code{Matrix::dgCMatrix}) with the same number of rows as \code{expr}.}

\item{gene_pair}{Character scalar like \code{"GENE1_GENE2"} indicating the
two gene column names in \code{expr}.}

\item{fisher_transform}{Logical; if \code{TRUE} (default), apply the Fisher
\eqn{\mathrm{atanh}} transform to each correlation. Values with \eqn{|r| \geq 1}
or non-finite are returned as \code{NA_real_}.}

\item{drop_zero_weight}{Logical; if \code{TRUE} (default), restrict each
kernel's computation to rows with strictly positive weight for that kernel.
If \code{FALSE}, all rows are considered (zeros contribute nothing).}
}
\value{
A named numeric vector of length \eqn{k} (number of kernels), where
names are the kernel column names in \code{weight_matrix}. Entries are
Fisher-\eqn{z} values if \code{fisher_transform=TRUE}, otherwise raw
correlations. Kernels with fewer than 2 positively weighted points (or
undefined variance) return \code{NA_real_}.
}
\description{
For a gene pair encoded as \code{"GENE1_GENE2"}, compute a vector of
weighted Pearson correlations \eqn{\hat{r}}—one per kernel—from a point×kernel weight
matrix. By default, correlations are Fisher-transformed (\eqn{z = \mathrm{atanh}(\hat{r})}).
}
\examples{
set.seed(1)
expr <- cbind(g1 = rnorm(60), g2 = rnorm(60))
coords <- cbind(runif(60), runif(60))
centres <- generate_kernel_centres_by_density(coords, span = 0.2)
W <- generate_weight_matrix_euclidean(coords, centres, span = 0.2, type = "gaussian")
zvec <- get_local_correlation_vector_pair(expr, W, "g1_g2")
head(zvec)

}
